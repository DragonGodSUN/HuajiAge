// Date: 2019/12/23 18:06:27
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package com.lh_lshen.mcbbs.huajiage.client.model.stand;

import com.lh_lshen.mcbbs.huajiage.stand.StandLoader;
import net.minecraft.client.model.ModelBox;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelTheWorld extends ModelStandBase
{
  //fields
	private final ModelRenderer head;
	private final ModelRenderer Shape1;
	private final ModelRenderer Shape2;
	private final ModelRenderer glass;
	private final ModelRenderer Shape3;
	private final ModelRenderer Shape4;
	private final ModelRenderer Shape5;
	private final ModelRenderer Shape6;
	private final ModelRenderer Shape7;
	private final ModelRenderer body;
	private final ModelRenderer bodydown;
	private final ModelRenderer Shape8;
	private final ModelRenderer Shape9;
	private final ModelRenderer Shape10;
	private final ModelRenderer Shape11;
	private final ModelRenderer Shape12;
	private final ModelRenderer Shape13;
	private final ModelRenderer Shape14;
	private final ModelRenderer back1;
	private final ModelRenderer back2;
	private final ModelRenderer rightarm;
	private final ModelRenderer leftarm;
	private final ModelRenderer leftleg;
	private final ModelRenderer legdownl;
	private final ModelRenderer rightleg;
	private final ModelRenderer legdownr;
	private final ModelRenderer left_hands;
	private final ModelRenderer handl1;
	private final ModelRenderer handl2;
	private final ModelRenderer handl3;
	private final ModelRenderer handl4;
	private final ModelRenderer handl5;
	private final ModelRenderer right_hands;
	private final ModelRenderer handr1;
	private final ModelRenderer handr2;
	private final ModelRenderer handr3;
	private final ModelRenderer handr4;
	private final ModelRenderer handr5;
  
  public ModelTheWorld()
  {
    textureWidth = 64;
    textureHeight = 128;
    
    head = new ModelRenderer(this);
	head.setRotationPoint(0.0F, 0.0F, 0.0F);
	head.cubeList.add(new ModelBox(head, 0, 0, -3.5F, -6.0F, -4.0F, 7, 6, 8, 0.0F, false));

	Shape1 = new ModelRenderer(this);
	Shape1.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape1, 0.4014F, 0.0F, 0.0F);
	head.addChild(Shape1);
	Shape1.cubeList.add(new ModelBox(Shape1, 0, 35, -4.5F, -8.0F, -1.0F, 9, 3, 9, 0.0F, false));

	Shape2 = new ModelRenderer(this);
	Shape2.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape2, 0.0524F, 0.0F, 0.0F);
	head.addChild(Shape2);
	Shape2.cubeList.add(new ModelBox(Shape2, 0, 49, -4.5F, -7.2F, -3.0F, 9, 4, 8, 0.0F, false));

  	glass = new ModelRenderer(this);
  	glass.setRotationPoint(0.0F, 0.0F, -0.5F);
  	head.addChild(glass);

  	Shape3 = new ModelRenderer(this);
  	Shape3.setRotationPoint(0.0F, 0.0F, 1.0F);
  	setRotation(Shape3, 0.0F, 1.0996F, 0.0F);
  	glass.addChild(Shape3);
  	Shape3.cubeList.add(new ModelBox(Shape3, 0, 63, 2.8F, -7.0F, -3.0F, 3, 4, 6, 0.0F, false));

  	Shape4 = new ModelRenderer(this);
  	Shape4.setRotationPoint(0.0F, 0.0F, 1.0F);
  	setRotation(Shape4, 0.0F, -1.0996F, 0.0F);
  	glass.addChild(Shape4);
  	Shape4.cubeList.add(new ModelBox(Shape4, 0, 63, -5.8F, -7.0F, -3.0F, 3, 4, 6, 0.0F, true));

	Shape5 = new ModelRenderer(this);
	Shape5.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape5, -0.1505F, 0.0F, 0.0F);
	head.addChild(Shape5);
	Shape5.cubeList.add(new ModelBox(Shape5, 0, 75, -4.5F, -4.0F, 1.0F, 9, 2, 4, 0.0F, false));

	Shape6 = new ModelRenderer(this);
	Shape6.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape6, 0.0F, 0.0F, 0.7854F);
	head.addChild(Shape6);
	Shape6.cubeList.add(new ModelBox(Shape6, 0, 30, -1.0F, 0.0F, -5.0F, 2, 1, 1, 0.0F, false));

	Shape7 = new ModelRenderer(this);
	Shape7.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape7, 0.0F, 0.0F, 0.7854F);
	head.addChild(Shape7);
	Shape7.cubeList.add(new ModelBox(Shape7, 0, 30, 0.0F, -1.0F, -5.0F, 1, 1, 1, 0.0F, false));

	body = new ModelRenderer(this);
	body.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(body, 0.0873F, 0.0F, 0.0F);
	body.cubeList.add(new ModelBox(body, 16, 16, -4.0F, 0.0F, -2.0F, 8, 7, 4, 0.0F, false));

	bodydown = new ModelRenderer(this);
	bodydown.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(bodydown, 0.0873F, 0.0F, 0.0F);
	body.addChild(bodydown);
	bodydown.cubeList.add(new ModelBox(bodydown, 19, 66, -3.5F, 7.0F, -2.0F, 7, 4, 4, 0.0F, false));

	Shape8 = new ModelRenderer(this);
	Shape8.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape8, 0.0873F, 0.0F, 0.0F);
	body.addChild(Shape8);
	Shape8.cubeList.add(new ModelBox(Shape8, 37, 30, 1.0F, -1.0F, -3.0F, 2, 11, 6, 0.0F, false));

	Shape9 = new ModelRenderer(this);
	Shape9.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape9, 0.0873F, 0.0F, 0.0F);
	body.addChild(Shape9);
	Shape9.cubeList.add(new ModelBox(Shape9, 37, 30, -3.0F, -1.0F, -3.0F, 2, 11, 6, 0.0F, true));

	Shape10 = new ModelRenderer(this);
	Shape10.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape10, 0.0873F, 0.0F, 0.0F);
	body.addChild(Shape10);
	Shape10.cubeList.add(new ModelBox(Shape10, 35, 49, -3.5F, 0.2F, -2.5F, 7, 4, 1, 0.0F, false));

	Shape11 = new ModelRenderer(this);
	Shape11.setRotationPoint(0.0F, 0.0F, -2.3F);
	setRotation(Shape11, 0.0873F, 0.0F, 0.0F);
	body.addChild(Shape11);
	Shape11.cubeList.add(new ModelBox(Shape11, 35, 56, -1.5F, 4.2F, 0.0F, 3, 3, 1, 0.0F, false));

	Shape12 = new ModelRenderer(this);
	Shape12.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape12, 0.0873F, 0.0F, 0.0F);
	body.addChild(Shape12);
	Shape12.cubeList.add(new ModelBox(Shape12, 16, 82, -4.0F, 10.0F, -3.5F, 8, 2, 7, 0.0F, false));

	Shape13 = new ModelRenderer(this);
	Shape13.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape13, 0.0873F, 0.0F, 0.7854F);
	body.addChild(Shape13);
	Shape13.cubeList.add(new ModelBox(Shape13, 0, 30, 7.0F, 8.0F, -3.5F, 2, 1, 1, 0.0F, false));

	Shape14 = new ModelRenderer(this);
	Shape14.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(Shape14, 0.0873F, 0.0F, 0.7854F);
	body.addChild(Shape14);
	Shape14.cubeList.add(new ModelBox(Shape14, 0, 30, 8.0F, 7.0F, -3.5F, 1, 1, 1, 0.0F, false));

	back1 = new ModelRenderer(this);
	back1.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(back1, 0.0873F, 0.0F, 0.0F);
	body.addChild(back1);
	back1.cubeList.add(new ModelBox(back1, 0, 83, 0.5F, 0.0F, 3.0F, 2, 7, 2, 0.0F, false));

	back2 = new ModelRenderer(this);
	back2.setRotationPoint(0.0F, 0.0F, 0.0F);
	setRotation(back2, 0.0873F, 0.0F, 0.0F);
	body.addChild(back2);
	back2.cubeList.add(new ModelBox(back2, 0, 83, -2.5F, 0.0F, 3.0F, 2, 7, 2, 0.0F, true));

	rightarm = new ModelRenderer(this);
	rightarm.setRotationPoint(-5.0F, 2.0F, 0.0F);
	setRotation(rightarm, 0.5236F, 0.0F, 0.0F);
	body.addChild(rightarm);
	rightarm.cubeList.add(new ModelBox(rightarm, 40, 16, -3.0F, -2.0F, -2.0F, 4, 4, 5, 0.0F, true));

	leftarm = new ModelRenderer(this);
	leftarm.setRotationPoint(5.0F, 2.0F, 0.0F);
	setRotation(leftarm, 0.5236F, 0.0F, 0.0F);
	body.addChild(leftarm);
	leftarm.cubeList.add(new ModelBox(leftarm, 40, 16, -1.0F, -2.0F, -2.0F, 4, 4, 5, 0.0F, false));

	leftleg = new ModelRenderer(this);
	leftleg.setRotationPoint(2.0F, 11.0F, 0.0F);
	setRotation(leftleg, -0.6981F, -0.4363F, -0.4712F);
	leftleg.cubeList.add(new ModelBox(leftleg, 21, 100, -2.0F, 0.0F, -3.0F, 5, 7, 5, 0.0F, false));

	legdownl = new ModelRenderer(this);
	legdownl.setRotationPoint(1.1276F, 4.9224F, 4.6341F);
	setRotation(legdownl, 1.2124F, 0.0F, 0.2618F);
	leftleg.addChild(legdownl);
	legdownl.cubeList.add(new ModelBox(legdownl, 0, 100, -2.2773F, -3.4722F, -4.5434F, 5, 9, 5, 0.0F, false));

	rightleg = new ModelRenderer(this);
	rightleg.setRotationPoint(-2.0F, 11.0F, 0.0F);
	setRotation(rightleg, -0.6981F, 0.4363F, 0.4712F);
	rightleg.cubeList.add(new ModelBox(rightleg, 21, 100, -3.0F, 0.0F, -3.0F, 5, 7, 5, 0.0F, true));

	legdownr = new ModelRenderer(this);
	legdownr.setRotationPoint(-0.0181F, 7.2866F, 3.8689F);
	setRotation(legdownr, 1.2124F, -0.0873F, -0.3491F);
	rightleg.addChild(legdownr);
	legdownr.cubeList.add(new ModelBox(legdownr, 0, 100, -2.5F, -4.5F, -2.5F, 5, 9, 5, 0.0F, false));

	left_hands = new ModelRenderer(this);
	left_hands.setRotationPoint(0.0F, 5.0F, 2.0F);

	handl1 = new ModelRenderer(this);
	handl1.setRotationPoint(8.0F, 2.0F, 0.0F);
	setRotation(handl1, -1.5708F, 0.0F, 0.0F);
	left_hands.addChild(handl1);
	handl1.cubeList.add(new ModelBox(handl1, 48, 4, 4.0F, 1.0F, -11.0F, 4, 8, 4, 0.0F, false));

	handl2 = new ModelRenderer(this);
	handl2.setRotationPoint(3.0F, 0.0F, 0.0F);
	setRotation(handl2, -1.5708F, 0.0F, 0.0F);
	left_hands.addChild(handl2);
	handl2.cubeList.add(new ModelBox(handl2, 48, 4, 14.0F, 8.0F, -6.0F, 4, 8, 4, 0.0F, false));

	handl3 = new ModelRenderer(this);
	handl3.setRotationPoint(3.0F, 0.0F, 0.0F);
	setRotation(handl3, -1.5708F, 0.0F, 0.0F);
	left_hands.addChild(handl3);
	handl3.cubeList.add(new ModelBox(handl3, 48, 4, 8.0F, -6.0F, -5.0F, 4, 8, 4, 0.0F, false));

	handl4 = new ModelRenderer(this);
	handl4.setRotationPoint(3.0F, 0.0F, 0.0F);
	setRotation(handl4, -1.5708F, 0.0F, 0.0F);
	left_hands.addChild(handl4);
	handl4.cubeList.add(new ModelBox(handl4, 48, 4, 10.0F, 5.0F, 1.0F, 4, 8, 4, 0.0F, false));

	handl5 = new ModelRenderer(this);
	handl5.setRotationPoint(3.0F, 0.0F, 0.0F);
	setRotation(handl5, -1.5708F, 0.0F, 0.0F);
	left_hands.addChild(handl5);
	handl5.cubeList.add(new ModelBox(handl5, 48, 4, 12.0F, 1.0F, -2.0F, 4, 8, 4, 0.0F, false));

	right_hands = new ModelRenderer(this);
	right_hands.setRotationPoint(0.0F, 5.0F, 2.0F);

	handr1 = new ModelRenderer(this);
	handr1.setRotationPoint(3.0F, 2.0F, 0.0F);
	setRotation(handr1, -1.5708F, 0.0F, 0.0F);
	right_hands.addChild(handr1);
	handr1.cubeList.add(new ModelBox(handr1, 48, 4, -19.0F, 3.0F, -1.0F, 4, 8, 4, 0.0F, true));

	handr2 = new ModelRenderer(this);
	handr2.setRotationPoint(-2.0F, 0.0F, 0.0F);
	setRotation(handr2, -1.5708F, 0.0F, 0.0F);
	right_hands.addChild(handr2);
	handr2.cubeList.add(new ModelBox(handr2, 48, 4, -13.0F, -1.0F, -9.0F, 4, 8, 4, 0.0F, true));

	handr3 = new ModelRenderer(this);
	handr3.setRotationPoint(-2.0F, 0.0F, 0.0F);
	setRotation(handr3, -1.5708F, 0.0F, 0.0F);
	right_hands.addChild(handr3);
	handr3.cubeList.add(new ModelBox(handr3, 48, 4, -13.0F, -6.0F, -3.0F, 4, 8, 4, 0.0F, true));

	handr4 = new ModelRenderer(this);
	handr4.setRotationPoint(-2.0F, 0.0F, 0.0F);
	setRotation(handr4, -1.5708F, 0.0F, 0.0F);
	right_hands.addChild(handr4);
	handr4.cubeList.add(new ModelBox(handr4, 48, 4, -19.0F, 8.0F, -3.0F, 4, 8, 4, 0.0F, true));

	handr5 = new ModelRenderer(this);
	handr5.setRotationPoint(-2.0F, 0.0F, 0.0F);
	setRotation(handr5, -1.5708F, 0.0F, 0.0F);
	right_hands.addChild(handr5);
	handr5.cubeList.add(new ModelBox(handr5, 48, 4, -17.0F, 3.0F, -6.0F, 4, 8, 4, 0.0F, true));
  }
  
  
  @Override
  public void render(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw,
		float headPitch, float scale) {
    setRotationAngles( limbSwing, limbSwingAmount, ageInTicks, headPitch,netHeadYaw, scale, entityIn);
    float off = (float) (MathHelper.cos((float) (0.1*ageInTicks))*0.1);
    head.offsetY = off;
    body.offsetY = off;
    leftleg.offsetY = off;
    rightleg.offsetY = off;
    
    head.rotateAngleX = headPitch * 0.017453292F;
    head.rotateAngleY = netHeadYaw * 0.017453292F;
    
    head.render(scale);
    body.render(scale);
    leftleg.render(scale);
    rightleg.render(scale);
    left_hands.render(scale);
    right_hands.render(scale);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  public void setRotationAngles(float limbSwing, float limbSwingAmount, float rotateFloat, float rotateYaw,
          float rotatePitch, float scale, Entity entity ,float power ,float speed)
  {
    super.setRotationAngles(limbSwing, limbSwingAmount, rotateFloat, rotateYaw, rotatePitch, scale, entity);
    handl1.rotateAngleY = MathHelper.cos(speed*rotateFloat) * 1.2F * power;
    handl2.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)Math.PI/3) * 1.4F * power;
    handl3.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(2*Math.PI/3)) * 1.6F * power;
    handl4.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(2.5*Math.PI/3)) * 1.3F * power;
    handl5.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(3*Math.PI/3)) * 1.7F * power;
    handr1.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(3.5*Math.PI/3)) * 1.2F * power;
    handr2.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(6*Math.PI/3)) * 1.1F * power;
    handr3.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(8*Math.PI/3)) * 1.4F * power;
    handr4.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(10*Math.PI/3)) * 1.5F * power;
    handr5.rotateAngleY = MathHelper.cos(speed*rotateFloat+(float)(1.5*Math.PI/3) )* 1.6F * power;
    
    left_hands.rotateAngleX = rotatePitch * 0.017453292F;
    left_hands.rotateAngleY = rotateYaw * 0.017453292F;
    right_hands.rotateAngleX = rotatePitch * 0.017453292F;
    right_hands.rotateAngleY = rotateYaw * 0.017453292F;
  }
  public void setPunch(float limbSwing, float limbSwingAmount, float rotateFloat, float rotateYaw,
          float rotatePitch, float scale, Entity entity ,float power ,float speed)
  {
    super.setRotationAngles(limbSwing, limbSwingAmount, rotateFloat, rotateYaw, rotatePitch, scale, entity);
    float r = (float) Math.random();
    float offysin = MathHelper.sin(r*speed*rotateFloat)  * power-0.25f;
    float offycos = MathHelper.cos(r *speed*rotateFloat)  * power-0.25f;
    handl1.offsetZ =offysin;
    handl2.offsetZ = offycos;
    handl3.offsetZ = offysin;
    handl4.offsetZ = offycos;
    handl5.offsetZ = offysin;
    handr1.offsetZ = offycos;
    handr2.offsetZ = offysin;
    handr3.offsetZ = offycos;
    handr4.offsetZ = offysin;
    handr5.offsetZ = offycos;
    float offxl =r* MathHelper.sin(r*speed*rotateFloat)  * power+0.2f;
    float offxr =r* MathHelper.sin(r*speed*rotateFloat)  * power-0.2f;
    left_hands.offsetX = offxl;
    right_hands.offsetX = offxr;
    
  }
  
  public void renderFirst(float x , float y , float z , float scale , float alpha) {
	  	GlStateManager.translate(x, y, z);
	  	GlStateManager.color(1.0F, 1.0F, 1.0F, alpha);
	  	left_hands.render(scale);
	  	right_hands.render(scale);
	  	GlStateManager.color(1,1,1,1);
  }


@Override
public void setPosition() {
	GlStateManager.translate(0.0F, -0.2F, -0.75F);	
}

@Override
public void effect(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw,
		float headPitch, float scale) {
	// TODO Auto-generated method stub
	
}


@Override
public void extraEffect(Entity entityIn, float limbSwing, float limbSwingAmount,
		float ageInTicks, float netHeadYaw, float headPitch, float scale) {
	ModelStandBase model = new ModelTheWorld();
	model.setRotationAngles(limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scale, entityIn, 1 ,StandLoader.THE_WORLD.getSpeed());
	model.renderFirst(0, 0, 0,(float)(scale*1.3), 0.5f);
	
}


}
